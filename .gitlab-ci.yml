image: golang:1.17.3

stages:
  - release

variables:
  REPO_NAME: gitlab.com/aoterocom/changelog-guardian

before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

release:
  stage: release
  script:
    - git config user.name "$GIT_USERNAME"
    - git config user.email "$GIT_EMAIL"
    - go get $(go list ./... | grep -v /vendor/)
    - go run main.go release --silent > VERSION
    - git branch release/$(cat VERSION)
    - git checkout release/$(cat VERSION)
    - git add VERSION CHANGELOG.md
    - git commit -m "[AUTOMATED] Release $(cat VERSION)"
    - RELEASE_NOTES=$(go run main.go release-notes --echo)
    - git push -o ci-skip https://gitlab-ci-token:${GITLAB_PUSH_TOKEN}@gitlab.com/aoterocom/changelog-guardian.git
    - |
      curl --location --request POST 'https://gitlab.com/api/v4/projects/"$CI_PROJECT_ID"/merge_requests' \
      --header 'PRIVATE-TOKEN: "$GITLAB_PUSH_TOKEN"' \
      --form 'id="'"$CI_PROJECT_ID"'"' \
      --form 'title="title"' \
      --form 'source_branch="release/$(cat VERSION)"' \
      --form 'target_branch="main"' \
      --form 'description="'"$RELEASE_NOTES"'"'

  only:
    - 31-prepare-release-flow
  rules:
    - if: '$TRIGGER == "Release"'